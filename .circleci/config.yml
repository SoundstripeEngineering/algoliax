defaults: &defaults
  working_directory: ~/algoliax

parameters:
  elixir_base_image:
    type: string
    default: cimg/elixir:1.15.5-erlang-26.0.2
  cache_version:
    type: string
    default: v2

version: 2.1
jobs:
  checkout:
    <<: *defaults
    docker:
      - image: << pipeline.parameters.elixir_base_image >>
    steps:
      - checkout
      - save_cache:
          key: << pipeline.parameters.cache_version >>-code-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/algoliax

  mix_deps_get:
    <<: *defaults
    docker:
      - image: << pipeline.parameters.elixir_base_image >>
    steps:
      - run:
          name: install hex & rebar
          command: mix do local.hex --force, local.rebar --force
      - restore_cache:
          key: << pipeline.parameters.cache_version >>-code-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - << pipeline.parameters.cache_version >>-mix-{{ .Branch }}-{{ checksum "mix.lock" }}
            - << pipeline.parameters.cache_version >>-mix-{{ .Branch }}
            - << pipeline.parameters.cache_version >>-mix
      - run:
          name: gather dependencies
          command: mix deps.get
      - save_cache:
          key: << pipeline.parameters.cache_version >>-mix-{{ .Branch }}-{{ checksum "mix.lock" }}
          paths:
            - deps
      - save_cache:
          key: << pipeline.parameters.cache_version >>-mix-{{ .Branch }}
          paths:
            - deps
      - save_cache:
          key: << pipeline.parameters.cache_version >>-mix
          paths:
            - deps

  code_analysis:
    <<: *defaults
    docker:
      - image: << pipeline.parameters.elixir_base_image >>
        environment:
          MIX_ENV: test
    steps:
      - run:
          name: install hex & rebar
          command: mix do local.hex --force, local.rebar --force
      - restore_cache:
          key: << pipeline.parameters.cache_version >>-code-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - << pipeline.parameters.cache_version >>-mix-{{ .Branch }}-{{ checksum "mix.lock" }}
            - << pipeline.parameters.cache_version >>-mix-{{ .Branch }}
      - run:
          name: Run mix format
          command: mix format --check-formatted
      - run:
          name: Run credo
          command: mix credo

  vulnerabilities_mix:
    <<: *defaults
    docker:
      - image: << pipeline.parameters.elixir_base_image >>
        environment:
          MIX_ENV: test
    steps:
      - run:
          name: install hex & rebar
          command: mix do local.hex --force, local.rebar --force
      - restore_cache:
          key: << pipeline.parameters.cache_version >>-code-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - << pipeline.parameters.cache_version >>-mix-{{ .Branch }}-{{ checksum "mix.lock" }}
            - << pipeline.parameters.cache_version >>-mix-{{ .Branch }}
      - run:
          name: Run sobelow
          command: mix sobelow --config > sobelow.txt
      - store_artifacts:
          path: sobelow.txt
      - run:
          name: Run mix audit
          command: mix deps.audit --format human

  test:
    <<: *defaults
    docker:
      - image: << pipeline.parameters.elixir_base_image >>
        environment:
          MIX_ENV: test
          DB_USERNAME: algoliax
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
      - image: postgres:11.4-alpine
        environment:
          POSTGRES_USER: algoliax
          POSTGRES_DB: algoliax_test
    steps:
      - run:
          name: Install hex & rebar
          command: mix do local.hex --force, local.rebar --force
      - restore_cache:
          key: << pipeline.parameters.cache_version >>-code-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - << pipeline.parameters.cache_version >>-mix-{{ .Branch }}-{{ checksum "mix.lock" }}
            - << pipeline.parameters.cache_version >>-mix-{{ .Branch }}
            - << pipeline.parameters.cache_version >>-mix
      - run:
          name: Apt update
          command: sudo apt update
      - run:
          name: Install postgresql-client
          command: sudo apt install postgresql-client
      - run:
          name: Wait for database
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Compile app
          command: mix compile
      - run:
          name: Create database
          command: mix ecto.create
      - run:
          name: Launch tests
          command: mix test

workflows:
  version: 2
  btd:
    jobs:
      - checkout
      - mix_deps_get:
          requires:
            - checkout
      - test:
          requires:
            - mix_deps_get
      - code_analysis:
          requires:
            - mix_deps_get
      - vulnerabilities_mix:
          requires:
            - mix_deps_get
